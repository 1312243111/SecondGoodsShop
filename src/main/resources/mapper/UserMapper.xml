<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ldu.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ldu.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="VARCHAR" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
    <result column="power" property="power" jdbcType="INTEGER" />
    <result column="last_login" property="lastLogin" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, username, password, QQ, create_at, goods_num, power, last_login, status
  </sql>
  <!--根据手机号查询用户-->
  <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="String" >
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone,jdbcType=CHAR}
  </select>

  <!-- 注册 -->
  <insert id="addPUser" parameterType="com.ldu.pojo.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, phone, username,
      password, QQ, create_at,
      goods_num, power, last_login,
      status)
       values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=CHAR}, #{qq,jdbcType=VARCHAR}, #{createAt,jdbcType=VARCHAR},
      #{goodsNum,jdbcType=INTEGER}, #{power,jdbcType=INTEGER}, #{lastLogin,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT})
  </insert>


  <update id="updateUserName" parameterType="com.ldu.pojo.User" >
    update user
    set
    phone = #{phone,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=VARCHAR},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      power = #{power,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateGoodsNum" parameterType="Integer" >
    update user set
    goods_num = #{goodsNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from user
    where id =#{id,jdbcType=INTEGER}
  </select>

  <select id="getUserList" resultMap="BaseResultMap" parameterType="String">
    select <include refid="Base_Column_List" /> from user
  </select>

  <select id="getUserById" resultMap="BaseResultMap" parameterType="Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--根据手机号 用户名 qq查询用户-->
  <select id="getUserListByUser" resultMap="BaseResultMap" parameterType="String">
    select * from user where 1=1
    <if test="phone != '' and phone != null" >
      AND phone like concat('%',#{phone},'%')
    </if>
    <if test="username != '' and username != null" >
      AND username like concat('%',#{username},'%')
    </if>
    <if test=" qq != '' and qq != null" >
      AND qq like concat('%',#{qq},'%')
    </if>
  </select>
</mapper>